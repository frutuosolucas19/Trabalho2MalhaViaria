package view;

import controller.ControllerMalha;
import controller.ControllerEstrada;
import controllerObserver.InterfaceMalha;
import java.awt.Dimension;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import model.MalhaViaria;
import utils.TableCellRendererImage;

/**
 *
 * @author Lucas de Liz, Matheus Maas
 */
public class SimuladorMalha extends javax.swing.JFrame implements InterfaceMalha {

    private static SimuladorMalha instance = null;
    private static MalhaViaria malhaViaria = MalhaViaria.getInstance();
    private static ControllerMalha controllerMalha = controllerMalha = ControllerMalha.getInstance();
    private static ControllerEstrada conEstrada = ControllerEstrada.getInstance();
    private final ImageIcon areia = new ImageIcon("./imagens/areia.png");

    private static Boolean criarMapa;
    private static int codCarro;

    /**
     * Creates new form viewSimuladorMalha
     *
     * @return
     */
    public static SimuladorMalha getInstance() {
        if (instance == null) {
            instance = new SimuladorMalha();

        }
        return instance;
    }

    private SimuladorMalha() {

        initComponents();
        malhaViaria = MalhaViaria.getInstance();
        controllerMalha.adicionarObserver(this);
        controllerMalha.gerarMapa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        jButtonVoltar = new javax.swing.JButton();
        jButtonEncerrar = new javax.swing.JButton();
        jTextFieldQtdMaxima = new javax.swing.JTextField();
        jLabelQtdMaxima = new javax.swing.JLabel();
        jButtonIniciar = new javax.swing.JButton();
        jTableMalha = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador de Trânsito");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButtonVoltar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jButtonEncerrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonEncerrar.setText("Encerrar");
        jButtonEncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncerrarActionPerformed(evt);
            }
        });

        jLabelQtdMaxima.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelQtdMaxima.setText("Quantidade Máxima de Carros:");

        jButtonIniciar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonIniciar.setText("Iniciar");
        jButtonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrincipalLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabelQtdMaxima)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldQtdMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(jButtonIniciar)
                .addGap(15, 15, 15)
                .addComponent(jButtonVoltar)
                .addGap(15, 15, 15)
                .addComponent(jButtonEncerrar)
                .addContainerGap())
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldQtdMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelQtdMaxima)
                    .addComponent(jButtonVoltar)
                    .addComponent(jButtonEncerrar)
                    .addComponent(jButtonIniciar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableMalha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTableMalha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableMalha.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableMalha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableMalha.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTableMalha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTableMalha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonEncerrarActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        this.setVisible(false);
        instance = null;
        this.dispose();
        criarMapa = true;
        MenuMalha.getInstance().setVisible(true);
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jButtonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIniciarActionPerformed
        if (!jTextFieldQtdMaxima.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(rootPane, "Somente Números Inteiros!");
            jTextFieldQtdMaxima.setText("");
        } else if ((jTextFieldQtdMaxima.getText().isEmpty())) {
            JOptionPane.showMessageDialog(rootPane, "Por Favor, Preencha o Campo com um Número Inteiro!");
        } else {
            jTextFieldQtdMaxima.setEditable(false);
            this.jButtonIniciar.setEnabled(false);

            conEstrada.iniciar();
            controllerMalha.definirCarros(Integer.parseInt(jTextFieldQtdMaxima.getText()));
        }
    }//GEN-LAST:event_jButtonIniciarActionPerformed

    @Override
    public void gerarTabelaMalha(int[][] matriz, int linha, int coluna) {
        criarMapa = true;

        DefaultTableModel tipoTabela;
        tipoTabela = new DefaultTableModel() {

            @Override
            public int getRowCount() {
                return malhaViaria.getLinha();
            }

            @Override
            public int getColumnCount() {
                return malhaViaria.getColuna();
            }

            @Override
            public Object getValueAt(int Filai, int colunaI) {
                try {

                    return colocarIcon(Filai, colunaI, matriz);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.toString());
                    return null;
                }
            }
        };

        tipoTabela.setRowCount(linha);
        tipoTabela.setColumnCount(coluna);
        jTableMalha.setIntercellSpacing(new Dimension(0, 0));
        jTableMalha.setRowHeight(30);
        jTableMalha.setModel(tipoTabela);
        jTableMalha.setDefaultRenderer(Object.class, new TableCellRendererImage());
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();

        for (int i = 0; i < jTableMalha.getColumnModel().getColumnCount(); i++) {
            TableColumn column = jTableMalha.getColumnModel().getColumn(i);
            column.setHeaderRenderer(renderer);
            column.setPreferredWidth(30);
        }

    }

    public ImageIcon colocarIcon(int linha, int coluna, int matriz[][]) {
        if (matriz[linha][coluna] == 0) {
            return areia;
        } else if (matriz[linha][coluna] != 0) {
            return conEstrada.Estrada(linha, coluna);
        }
        return null;
    }

    @Override
    public void atualizarSimulador() {
        jTableMalha.repaint();
    }

    @Override
    public void definirQuantidadeCarros(int valor) {
        jTextFieldQtdMaxima.setText("" + valor);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEncerrar;
    private javax.swing.JButton jButtonIniciar;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabelQtdMaxima;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JTable jTableMalha;
    private javax.swing.JTextField jTextFieldQtdMaxima;
    // End of variables declaration//GEN-END:variables
}
